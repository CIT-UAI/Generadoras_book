1/5,1, 1, 3,
1/5, 1,1,3,
1/7, 1/3,1/3,1),
nrow = n, ncol = n, byrow = T)
m
m <- matrix(c(1, 1/7, 1/5, 1/3,
7, 1, 1/2, 2,
5, 2,1,2,
3, 1/2,1/2,1),
nrow = n, ncol = n, byrow = T)
m
m <- matrix(c(1, 1/7, 1/5, 1/3,
7, 1, 1/2, 2,
5, 2,1,2,
3, 1/2,1/2,1),
nrow = n, ncol = n, byrow = T) %>%
as.data.frame()
library(dplyr)
m <- matrix(c(1, 1/7, 1/5, 1/3,
7, 1, 1/2, 2,
5, 2,1,2,
3, 1/2,1/2,1),
nrow = n, ncol = n, byrow = T) %>%
as.data.frame()
m
colnames(A) <-  A:D
colnames(A) <-  letters(A:D)
colnames(A) <-  letters(4)
colnames(A) <-  LETTERS(A)
names_criterios <- c("A", "B", "C", "D")
colnames(A) <-  names_criterios
A <- matrix(c(1, 1/7, 1/5, 1/3,
7, 1, 1/2, 2,
5, 2,1,2,
3, 1/2,1/2,1),
nrow = n, ncol = n, byrow = T) %>%
as.data.frame()
names_criterios <- c("A", "B", "C", "D")
colnames(A) <-  names_criterios
A
rownames(A) <-  names_criterios
A
A <- matrix(c(1, 1/7, 1/5, 1/3,
7, 1, 1/2, 2,
5, 2,1,2,
3, 1/2,1/2,1),
nrow = n, ncol = n, byrow = T)
# A <- as.data.frame()
names_criterios <- c("A", "B", "C", "D")
colnames(A) <-  names_criterios
rownames(A) <-  names_criterios
A
A %>% round(2)
m %>% round(2)
names_criterios <- c("A", "B", "C", "D")
colnames(A) <-  names_criterios
rownames(A) <-  names_criterios
m %>% round(2)
n = 4
m <- matrix(c(1, 1/7, 1/5, 1/3,
7, 1, 1/2, 2,
5, 2,1,2,
3, 1/2,1/2,1),
nrow = n, ncol = n, byrow = T)
names_criterios <- c("A", "B", "C", "D")
colnames(m) <-  names_criterios
rownames(m) <-  names_criterios
m %>% round(2)
m %>%
round(2) %>%
kbl() %>%
# kable_material_dark()
kable_styling(bootstrap_options = "striped",
full_width = F, position = "center",
font_size = 15)
# Función lambda maximo
lambda_max_fnc <-  function(matrix){
eigenvalues <- eigenvalues(matrix, F)
lambda_max <- max(abs(eigenvalues))
return(lambda_max)
}
n = 4
A <- matrix(c(1, 1/7, 1/5, 1/3,
7, 1, 1/2, 2,
5, 2,1,2,
3, 1/2,1/2,1),
nrow = n, ncol = n, byrow = T)
names_criterios <- c("A", "B", "C", "D")
colnames(m) <-  names_criterios
rownames(m) <-  names_criterios
A %>% round(2)
rownames(A) <-  names_criterios
A %>% round(2)
n = 4
A <- matrix(c(1, 1/7, 1/5, 1/3,
7, 1, 1/2, 2,
5, 2,1,2,
3, 1/2,1/2,1),
nrow = n, ncol = n, byrow = T)
names_criterios <- c("A", "B", "C", "D")
colnames(A) <-  names_criterios
rownames(A) <-  names_criterios
A %>% round(2)
lambda_max <- lambda_max_fnc(A)
# Obtener los autovalores de la matriz
eigenvalues  <- function(matriz, normalize = F){
eigenvalues <- abs(eigen(matriz)$values)
if(normalize==T){
eigenvalues <- eigenvalues/sum(eigenvalues)
}
return(eigenvalues)
}
# Función lambda maximo
lambda_max_fnc <-  function(matriz){
eigenvalues <- eigenvalues(matriz, F)
lambda_max <- max(abs(eigenvalues))
return(lambda_max)
}
lambda_max <- lambda_max_fnc(A)
lambda_max
w <- eigenvectors(A, normalize = T)
eigenvectors <- function(matriz, normalize = F){
eigenvectors <- abs(eigen(matriz)$vectors)[,1]
if(normalize==T){
eigenvectors <- eigenvectors/sum(eigenvectors)
}
return(eigenvectors)
}
w <- eigenvectors(A, normalize = T)
w
# Función para calcular el vector propio utilizando el método de potencias
w_potencias <- function(A, tol = 1e-6, maxiter=100) {
x0 <- rep(1, dim_m(A))
n <- length(x0)
x <- x0/norm(matrix(x0, ncol = 1))
k <- 0
while (k < maxiter) {
k <- k + 1
y <- A %*% x
lambda <- sum(y * x)
x <- y/norm(y)
if (abs(lambda - sum(y * x)) < tol) break
}
# list(x = x, lambda = lambda)
x <- as.vector(x)
return(x)
}
w <- w_potencias(A)
dim_m <- function(matriz){
if(any(diag(matriz)!=1)) stop("Diagonal de la Matriz debe ser 1")
n <-  dim(matriz)[1]
return(n)
}
w <- w_potencias(A)
w
A
m
m_i <- matrix(c(1, 3, 1/3,
1/3, 1, 5,
3, 1/5,1),
nrow = 3, ncol = 3, byrow = T)
names_criterios <- c("I", "II", "III")
colnames(m_i) <- rownames(m_i) <-  names_criterios
mi
m_i
m %>% round(2)
names_criterios <- c("A", "B", "C", "D")
colnames(m) <-  rownames(m) <-  names_criterios
m %>% round(2)
w <- eigenvectors(m, normalize = T)
w
w2 <- w_potencias(m)
w2
m_A <- matrix(c(1, 3, 1/3,
1/3, 1, 5,
3, 1/5,1),
nrow = 3, ncol = 3, byrow = T)
names_criterios <- c("I", "II", "III")
colnames(m_i) <- rownames(m_i) <-  names_criterios
m_M
mA <- matrix(c(1, 3, 1/3,
1/3, 1, 5,
3, 1/5,1),
nrow = 3, ncol = 3, byrow = T)
names_criterios <- c("I", "II", "III")
colnames(mA) <- rownames(mA) <-  names_criterios
mA
wA <- eigenvectors(mA, normalize = T)
wA
mB <- matrix(c(1, 1/5, 3,
5, 1, 7,
1/3, 1/7,1),
nrow = 3, ncol = 3, byrow = T)
names_criterios <- c("I", "II", "III")
colnames(mB) <- rownames(mB) <-  names_criterios
wB <- eigenvectors(mB, normalize = T)
wA
wB
1/5
mD <- matrix(c(1, 5, 1/4,
1/5, 1, 1/8,
4, 8,1),
nrow = 3, ncol = 3, byrow = T)
mD <- matrix(c(1, 5, 1/4,
1/5, 1, 1/8,
4, 8,1),
nrow = 3, ncol = 3, byrow = T)
names_criterios <- c("I", "II", "III")
colnames(mD) <- rownames(mD) <-  names_criterios
mD %>%
round(2) %>%
kbl() %>%
# kable_material_dark()
kable_styling(bootstrap_options = "striped",
full_width = F, position = "center",
font_size = 15)
mD <- eigenvectors(mD, normalize = T)
mD
c(mA, mB, Mc, mD)
wC <- eigenvectors(mC, normalize = T)
wC
c(wA, wB, wC, wD)
wC <- eigenvectors(mC, normalize = T)
mC <- matrix(c(1, 1/5, 3,
5, 1, 7,
1/3, 1/7,1),
nrow = 3, ncol = 3, byrow = T)
names_criterios <- c("I", "II", "III")
colnames(mC) <- rownames(mC) <-  names_criterios
wC <- eigenvectors(mC, normalize = T)
wC
c(wA, wB, wC, wD)
wD <- eigenvectors(mD, normalize = T)
wD
mD <- matrix(c(1, 5, 1/4,
1/5, 1, 1/8,
4, 8,1),
nrow = 3, ncol = 3, byrow = T)
names_criterios <- c("I", "II", "III")
colnames(mD) <- rownames(mD) <-  names_criterios
c(wA, wB, wC, wD)
wD <- eigenvectors(mD, normalize = T)
wD
c(wA, wB, wC, wD)
w_aternativas <- matrix(c(wA, wB, wC, wD),
nrow = 4, ncol = 3, byrow = T)
w_aternativas
w_aternativas %*% w
w_aternativas <- matrix(c(wA, wB, wC, wD),
nrow = 3, ncol = 4, byrow = T)
w_aternativas
w_aternativas %*% w
w_aternativas <- matrix(c(wA, wB, wC, wD),
nrow = 3, ncol = 4, byrow = F)
w_aternativas
w_aternativas %*% w
w_aternativas
w
w_aternativas
names_criterios <- c("A", "B", "C", "D")
names_alternativas <- c("I", "II", "III")
colnames(w_aternativas) <- names_criterios
rownames(w_aternativas)<-  names_alternativas
w_aternativas %>%
# round(2) %>%
kbl() %>%
# kable_material_dark()
kable_styling(bootstrap_options = "striped",
full_width = F, position = "center",
font_size = 15)
w_aternativas
wD
resultados <- w_aternativas %*% w
resultados
colnames(resultados) <- "Decisión"
resultados %>%
# round(2) %>%
kbl() %>%
# kable_material_dark()
kable_styling(bootstrap_options = "striped",
full_width = F, position = "center",
font_size = 15)
pmax(resultados[,2])
pmax(resultados[[,2]])
resultados
pmax(resultados[[,1]])
pmax(resultados[1])
pmax(resultados[,1])
max(resultados[,1])
IA_params <- readRDS("data/rds/IA.rds")
IA <- ia_fnc(ia_object = IA_params, n_dim = n)
# consistencia aleatoria
ia_fnc <-  function(ia_object, n_dim){
ia <-  filter(ia_object, n == n_dim) %>%
pull(ia)
return(ia)
}
quarto previre
quarto preview
knitr::opts_chunk$set(echo = FALSE)
suppressPackageStartupMessages(library(sf))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(knitr))
suppressPackageStartupMessages(library(kableExtra))
# suppressPackageStartupMessages(library(mapview))
comunas <- readRDS("data/rds/R02_COMUNAS.rds")
comunas
comunas_tbl <- comunas %>%
st_drop_geometry() %>%
mutate(Area = round(as.numeric(st_area(.))))
comunas
comunas_tbl <- comunas %>%
mutate(Area = round(as.numeric(st_area(.)))) %>%
st_drop_geometry() %>%
select(Provincia = NOM_PROVIN, Comuna = NOM_COMUNA, Area)
comunas_tbl
comunas_tbl <- comunas %>%
mutate(Area = round(as.numeric(st_area(.)))/10000) %>%
st_drop_geometry() %>%
select(Provincia = NOM_PROVIN, Comuna = NOM_COMUNA, Area)
comunas_tbl <- comunas %>%
mutate(Area = round(as.numeric(st_area(.)))/10000) %>%
st_drop_geometry() %>%
select(Provincia = NOM_PROVIN, Comuna = NOM_COMUNA, Area_hc = Area)
comunas_tbl
comunas_tbl <- comunas %>%
mutate(Area = round(as.numeric(st_area(.)))/10000) %>%
st_drop_geometry() %>%
select(Provincia = NOM_PROVIN, Comuna = NOM_COMUNA, Area_hc = Area) %>%
arrange(Provincia)
comunas_tbl
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
xc(1, 3, 45,3,6,3)
x <- c(1, 3, 45,3,6,3)
length(x)
sum(x|1)
?shapiro.test()
x <- runif(1000, min = 2, max = 4)
system.time(length(x))
x <- runif(1000000000, min = 2, max = 4)
length(x)
system.time(length(x))
x <- runif(1000000000, min = 2, max = 4)
system.time(length(x))
library(censo2017)
install.packages("censo2017")
library(censo2017)
library(dplyr)
censo_descargar()
con <- censo_conectar()
library(censo2017)
library(dplyr)
con <- censo_conectar()
tbl(con, "variables") %>%
filter(variable == "p01") %>%
collect()
tbl(con, "variables") %>%
filter(variable == "p01") %>%
collect()
tbl(con, "variables") %>%
filter(variable == "p02") %>%
collect()
tbl(con, "variables") %>%
filter(variable == "p01") %>%
collect()
tbl(con, "variables") %>%
filter(variable == "p01") %>%
collect()
tbl(con, "variables_codificacion") %>%
# filter(variable == "p01") %>%
# select(valor, descripcion) %>%
collect()
tbl(con, "variables_codificacion") %>%
filter(variable == "p01") %>%
# select(valor, descripcion) %>%
collect()
tbl(con, "zonas") %>%
mutate(region = str_sub(geocodigo, 1, 2)) %>%
filter(region == 14) %>%
inner_join(tbl(con, "viviendas")) %>%
group_by(p01) %>%
count() %>%
collect() %>%
kable()
tbl(con, "zonas") %>%
mutate(region = str_sub(geocodigo, 1, 2)) %>%
filter(region == 14) %>%
inner_join(tbl(con, "viviendas")) %>%
group_by(p01) %>%
count() %>%
collect()
tbl(con, "zonas")
DBI::dbListTables(con)
DBI::dbListTables(con)
tbl(con, "personas") %>%
filter(variable == "p01") %>%
collect()
tbl(con, "personas") %>%
# filter(variable == "p01") %>%
collect()
tbl(con, "personas") %>%
filter(variable == "p07") %>%
collect()
tbl(con, "zonas") %>%
mutate(region = str_sub(geocodigo, 1, 2)) %>%
filter(region == "14") %>%
inner_join(tbl(con, "viviendas")) %>%
group_by(p01) %>%
count() %>%
left_join(
tbl(con, "variables_codificacion") %>%
filter(variable == "p01") %>%
select(p01 = valor, p01_desc = descripcion)
) %>%
select(p01, p01_desc, n) %>%
arrange(-n) %>%
ungroup() %>%
mutate(p = round(100 * n / sum(n), 2)) %>%
collect()
1/14
4*62397
knitr::opts_chunk$set(echo = FALSE)
suppressPackageStartupMessages(library(sf))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(knitr))
suppressPackageStartupMessages(library(kableExtra))
suppressPackageStartupMessages(library(mapview))
data.frame(
stringsAsFactors = FALSE,
V1 = c(1L,2L,3L,4L,5L,6L,7L,8L,
9L,10L,11L,12L,13L,14L),
V2 = c("Asentamientos y territorios indigenas","Poblamiento","Radiacion solar",
"Zonas saturadas y latentes","Areas protegidas","Pendiente",
"Uso agricola de suelo","Uso forestal del suelo",
"Uso Bosque mixto o nativo","Sitios arqueologicos y paleontologicos",
"Bienes nacionales protegidos",
"Lineas de transmision existente","Infraestructura existente",
"Zonas de interes turistico")) %>%
kable(row.names = FALSE,
align = "c", caption = NULL,
format = "html") %>%
kable_styling(
bootstrap_options =
c("striped", "hover", "condensed"),
position = "center", full_width = FALSE)
LETTERS[1:14]
A <- openxlsx::read.xlsx("data/tablas/SF_A.xlsx")
A
A <- openxlsx::read.xlsx("data/tablas/SF_A.xlsx")
A
A <-  read.csv("data/tablas/SF_A.csv", sep = ";", encoding = "latin-1", header = T)
A
A <-  read.csv("data/tablas/SF_A.csv", sep = ",", encoding = "latin-1", header =  T)
A
A %>% round(1)
round(A, 1)
A
A <-  read.csv("data/tablas/SF_A.csv", sep = ",", encoding = "latin-1", header =  T)
rownames(A) <- A$X
A$X <- NULL
A
A$X
A <-  read.csv("data/tablas/SF_A.csv", sep = ",", encoding = "latin-1", header =  T)
rownames(A) <- A$X
A
A$X <- NULL
A
A %>%
round(1)
excel <- openxlsx::read.xlsx("data/tablas/SF_Tab_w.xlsx") %>%
dplyr::select(-starts_with("X"))
excel
knitr::opts_chunk$set(echo = FALSE)
suppressPackageStartupMessages(library(sf))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(knitr))
suppressPackageStartupMessages(library(kableExtra))
suppressPackageStartupMessages(library(mapview))
IA %>%
mutate(n =as.character(n)) %>%
t() %>%
kable(row.names = FALSE,
align = "c", caption = NULL,
format = "html") %>%
kable_styling(
bootstrap_options =
c("striped", "hover", "condensed"),
position = "center", full_width = FALSE, font_size = 13)
IA <- readRDS("data/rds/IA.rds") %>%
mutate(n =as.character(n)) %>%
t()
IA
IA <- readRDS("data/rds/IA.rds") %>%
mutate(n =as.character(n))
IA
IA[14,]
IA[14,2]
IA <- readRDS("data/rds/IA.rds") %>%
mutate(n =as.character(n))
IA %>%
t()
tabla_ic <- openxlsx::read.xlsx("data/tablas/SF_resticciones.xlsx") %>%
dplyr::select(-starts_with("X")) %>%
kbl() %>%
# kable_material_dark()
kable_styling(bootstrap_options = "striped",
full_width = F, position = "center",
font_size = 15)
