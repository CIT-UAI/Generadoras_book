n= 4
m <- matrix(c(1, 5, 5, 7,
1/5,1, 1, 3,
1/5, 1,1,3,
1/7, 1/3,1/3,1),
nrow = n, ncol = n, byrow = T)
resultados <- potencias(m, x0, 1e-6, 100)
# Ejemplo de uso
x0 <- c(1, 1)
n <- length(x0)
x <- x0/norm(x0)
x
x <- x0/norm(x0)
n <- length(x0)
# Ejemplo de uso
x0 <- c(1, 1)
x0
n <- length(x0)
x <- x0/norm(x0)
norm(x0)
# Función para calcular el vector propio utilizando el método de potencias
potencias <- function(A, x0, tol, maxiter) {
n <- length(x0)
x <- x0/norm(x0)
k <- 0
while (k < maxiter) {
k <- k + 1
y <- A %*% x
lambda <- sum(y * x)
x <- y/norm(y)
if (abs(lambda - sum(y * x)) < tol) break
}
list(x = x, lambda = lambda)
}
# Ejemplo de uso
A <- matrix(c(2, 1, 1, 2), ncol = 2)
x0 <- c(1, 1)
resultados <- potencias(A, x0, 1e-6, 100)
# Función para calcular el vector propio utilizando el método de potencias
potencias <- function(A, x0, tol, maxiter) {
n <- length(x0)
x <- matrix(x0/norm(x0), ncol = 1)
k <- 0
while (k < maxiter) {
k <- k + 1
y <- A %*% x
lambda <- sum(y * x)
x <- y/norm(y)
if (abs(lambda - sum(y * x)) < tol) break
}
list(x = x, lambda = lambda)
}
# Ejemplo de uso
A <- matrix(c(2, 1, 1, 2), ncol = 2)
x0 <- c(1, 1)
resultados <- potencias(A, x0, 1e-6, 100)
# Ejemplo de uso
A <- matrix(c(2, 1, 1, 2), ncol = 2)
x0 <- c(1, 1)
resultados <- potencias(A, x0, 1e-6, 100)
n <- length(x0)
x <- matrix(x0/norm(x0), ncol = 1)
# Función para calcular el vector propio utilizando el método de potencias
potencias <- function(A, x0, tol, maxiter) {
n <- length(x0)
x <- matrix(x0/norm(x0), ncol = 1)
k <- 0
while (k < maxiter) {
k <- k + 1
y <- A %*% x
lambda <- sum(y * x)
x <- y/norm(y)
if (abs(lambda - sum(y * x)) < tol) break
}
list(x = x, lambda = lambda)
}
# Ejemplo de uso
A <- matrix(c(2, 1, 1, 2), ncol = 2)
x0 <- c(1, 1)
resultados <- potencias(A, x0, 1e-6, 100)
norm(x0
)
norm(1)
x <- matrix(x0/norm(x0, type = 1), ncol = 1)
(x1 <- cbind(1, 1:10))
norm(x1)
x0
rnorm(1)
rnorm(1,1)
rnorm(c(1, 1)
)
norm(x0)
x0 <- c(2, 1)
x0 <- c(2, 1)
x0
# Ejemplo de uso
A <- matrix(c(2, 1, 1, 2), ncol = 2)
x0 <- c(2, 1)
resultados <- potencias(A, x0, 1e-6, 100)
x <- matrix(x0/norm(x0), ncol = 1)
?norm
x <- norm(matrix(x0/norm(x0), ncol = 1))
x0/norm(matrix(x0, ncol = 1)
x <- matrix(x0/norm(x0), ncol = 1)
x0/norm(matrix(x0, ncol = 1))
# Función para calcular el vector propio utilizando el método de potencias
potencias <- function(A, x0, tol, maxiter) {
n <- length(x0)
x <- x0/norm(matrix(x0, ncol = 1))
k <- 0
while (k < maxiter) {
k <- k + 1
y <- A %*% x
lambda <- sum(y * x)
x <- y/norm(y)
if (abs(lambda - sum(y * x)) < tol) break
}
list(x = x, lambda = lambda)
}
# Ejemplo de uso
A <- matrix(c(2, 1, 1, 2), ncol = 2)
x0 <- c(2, 1)
resultados <- potencias(A, x0, 1e-6, 100)
resultados
x0/norm(matrix(x0, ncol = 1))
n= 4
m <- matrix(c(1, 5, 5, 7,
1/5,1, 1, 3,
1/5, 1,1,3,
1/7, 1/3,1/3,1),
nrow = n, ncol = n, byrow = T)
resultados <- potencias(m, x0, 1e-6, 100)
# Función para calcular el vector propio utilizando el método de potencias
potencias <- function(A, x0, tol, maxiter) {
n <- length(x0)
x <- x0/norm(x0)
k <- 0
while (k < maxiter) {
k <- k + 1
y <- A %*% x
lambda <- sum(y * x)
x <- y/norm(y)
if (abs(lambda - sum(y * x)) < tol) break
}
list(x = x, lambda = lambda)
}
resultados <- potencias(m, x0, 1e-6, 100)
m
resultados <- potencias(A= m, x0, 1e-6, 100)
A= m
x0 <- c(1, 1)
resultados <- potencias(A= m, x0, 1e-6, 100)
n <- length(x0)
n
x <- x0/norm(matrix(x0, ncol = 1))
x
k <- 0
maxiter = 100
tol=1e-6
tol
k <- k + 1
k
y <- A %*% x
A
x
A
# Ejemplo de uso
A <- matrix(c(2, 1, 1, 2), ncol = 2)
dim(A)
x0 <- rep(1)
x0
x0 <- rep(1, 4)
x0
x0 <- rep(1, 4)
resultados <- potencias(A= m, x0, 1e-6, 100)
A= m
k <- k + 1
y <- A %*% x
A
x
x <- x0/norm(matrix(x0, ncol = 1))
x
y <- A %*% x
y
lambda <- sum(y * x)
x <- y/norm(y)
if (abs(lambda - sum(y * x)) < tol) break
n <- length(x0)
x <- x0/norm(matrix(x0, ncol = 1))
k <- 0
while (k < maxiter) {
k <- k + 1
y <- A %*% x
lambda <- sum(y * x)
x <- y/norm(y)
if (abs(lambda - sum(y * x)) < tol) break
}
list(x = x, lambda = lambda)
# Función para calcular el vector propio utilizando el método de potencias
potencias <- function(A, x0, tol, maxiter) {
n <- length(x0)
x <- x0/norm(matrix(x0, ncol = 1))
k <- 0
while (k < maxiter) {
k <- k + 1
y <- A %*% x
lambda <- sum(y * x)
x <- y/norm(y)
if (abs(lambda - sum(y * x)) < tol) break
}
list(x = x, lambda = lambda)
}
resultados <- potencias(A= m, x0, 1e-6, 100)
w <- resultados$x
w
n =4
x0 <- rep(1, n)
resultados <- potencias(A= m, x0, 1e-6, 100)
w <- resultados$x
w
resultados
n = 4
m <- matrix(c(1, 5, 5, 7,
1/5,1, 1, 3,
1/5, 1,1,3,
1/7, 1/3,1/3,1),
nrow = n, ncol = n, byrow = T)
m
m <- matrix(c(1, 1/7, 1/5, 1/3,
7, 1, 1/2, 2,
5, 2,1,2,
3, 1/2,1/2,1),
nrow = n, ncol = n, byrow = T)
m
m <- matrix(c(1, 1/7, 1/5, 1/3,
7, 1, 1/2, 2,
5, 2,1,2,
3, 1/2,1/2,1),
nrow = n, ncol = n, byrow = T) %>%
as.data.frame()
library(dplyr)
m <- matrix(c(1, 1/7, 1/5, 1/3,
7, 1, 1/2, 2,
5, 2,1,2,
3, 1/2,1/2,1),
nrow = n, ncol = n, byrow = T) %>%
as.data.frame()
m
colnames(A) <-  A:D
colnames(A) <-  letters(A:D)
colnames(A) <-  letters(4)
colnames(A) <-  LETTERS(A)
names_criterios <- c("A", "B", "C", "D")
colnames(A) <-  names_criterios
A <- matrix(c(1, 1/7, 1/5, 1/3,
7, 1, 1/2, 2,
5, 2,1,2,
3, 1/2,1/2,1),
nrow = n, ncol = n, byrow = T) %>%
as.data.frame()
names_criterios <- c("A", "B", "C", "D")
colnames(A) <-  names_criterios
A
rownames(A) <-  names_criterios
A
A <- matrix(c(1, 1/7, 1/5, 1/3,
7, 1, 1/2, 2,
5, 2,1,2,
3, 1/2,1/2,1),
nrow = n, ncol = n, byrow = T)
# A <- as.data.frame()
names_criterios <- c("A", "B", "C", "D")
colnames(A) <-  names_criterios
rownames(A) <-  names_criterios
A
A %>% round(2)
m %>% round(2)
names_criterios <- c("A", "B", "C", "D")
colnames(A) <-  names_criterios
rownames(A) <-  names_criterios
m %>% round(2)
n = 4
m <- matrix(c(1, 1/7, 1/5, 1/3,
7, 1, 1/2, 2,
5, 2,1,2,
3, 1/2,1/2,1),
nrow = n, ncol = n, byrow = T)
names_criterios <- c("A", "B", "C", "D")
colnames(m) <-  names_criterios
rownames(m) <-  names_criterios
m %>% round(2)
m %>%
round(2) %>%
kbl() %>%
# kable_material_dark()
kable_styling(bootstrap_options = "striped",
full_width = F, position = "center",
font_size = 15)
# Función lambda maximo
lambda_max_fnc <-  function(matrix){
eigenvalues <- eigenvalues(matrix, F)
lambda_max <- max(abs(eigenvalues))
return(lambda_max)
}
n = 4
A <- matrix(c(1, 1/7, 1/5, 1/3,
7, 1, 1/2, 2,
5, 2,1,2,
3, 1/2,1/2,1),
nrow = n, ncol = n, byrow = T)
names_criterios <- c("A", "B", "C", "D")
colnames(m) <-  names_criterios
rownames(m) <-  names_criterios
A %>% round(2)
rownames(A) <-  names_criterios
A %>% round(2)
n = 4
A <- matrix(c(1, 1/7, 1/5, 1/3,
7, 1, 1/2, 2,
5, 2,1,2,
3, 1/2,1/2,1),
nrow = n, ncol = n, byrow = T)
names_criterios <- c("A", "B", "C", "D")
colnames(A) <-  names_criterios
rownames(A) <-  names_criterios
A %>% round(2)
lambda_max <- lambda_max_fnc(A)
# Obtener los autovalores de la matriz
eigenvalues  <- function(matriz, normalize = F){
eigenvalues <- abs(eigen(matriz)$values)
if(normalize==T){
eigenvalues <- eigenvalues/sum(eigenvalues)
}
return(eigenvalues)
}
# Función lambda maximo
lambda_max_fnc <-  function(matriz){
eigenvalues <- eigenvalues(matriz, F)
lambda_max <- max(abs(eigenvalues))
return(lambda_max)
}
lambda_max <- lambda_max_fnc(A)
lambda_max
w <- eigenvectors(A, normalize = T)
eigenvectors <- function(matriz, normalize = F){
eigenvectors <- abs(eigen(matriz)$vectors)[,1]
if(normalize==T){
eigenvectors <- eigenvectors/sum(eigenvectors)
}
return(eigenvectors)
}
w <- eigenvectors(A, normalize = T)
w
# Función para calcular el vector propio utilizando el método de potencias
w_potencias <- function(A, tol = 1e-6, maxiter=100) {
x0 <- rep(1, dim_m(A))
n <- length(x0)
x <- x0/norm(matrix(x0, ncol = 1))
k <- 0
while (k < maxiter) {
k <- k + 1
y <- A %*% x
lambda <- sum(y * x)
x <- y/norm(y)
if (abs(lambda - sum(y * x)) < tol) break
}
# list(x = x, lambda = lambda)
x <- as.vector(x)
return(x)
}
w <- w_potencias(A)
dim_m <- function(matriz){
if(any(diag(matriz)!=1)) stop("Diagonal de la Matriz debe ser 1")
n <-  dim(matriz)[1]
return(n)
}
w <- w_potencias(A)
w
A
m
m_i <- matrix(c(1, 3, 1/3,
1/3, 1, 5,
3, 1/5,1),
nrow = 3, ncol = 3, byrow = T)
names_criterios <- c("I", "II", "III")
colnames(m_i) <- rownames(m_i) <-  names_criterios
mi
m_i
m %>% round(2)
names_criterios <- c("A", "B", "C", "D")
colnames(m) <-  rownames(m) <-  names_criterios
m %>% round(2)
w <- eigenvectors(m, normalize = T)
w
w2 <- w_potencias(m)
w2
m_A <- matrix(c(1, 3, 1/3,
1/3, 1, 5,
3, 1/5,1),
nrow = 3, ncol = 3, byrow = T)
names_criterios <- c("I", "II", "III")
colnames(m_i) <- rownames(m_i) <-  names_criterios
m_M
mA <- matrix(c(1, 3, 1/3,
1/3, 1, 5,
3, 1/5,1),
nrow = 3, ncol = 3, byrow = T)
names_criterios <- c("I", "II", "III")
colnames(mA) <- rownames(mA) <-  names_criterios
mA
wA <- eigenvectors(mA, normalize = T)
wA
mB <- matrix(c(1, 1/5, 3,
5, 1, 7,
1/3, 1/7,1),
nrow = 3, ncol = 3, byrow = T)
names_criterios <- c("I", "II", "III")
colnames(mB) <- rownames(mB) <-  names_criterios
wB <- eigenvectors(mB, normalize = T)
wA
wB
1/5
mD <- matrix(c(1, 5, 1/4,
1/5, 1, 1/8,
4, 8,1),
nrow = 3, ncol = 3, byrow = T)
mD <- matrix(c(1, 5, 1/4,
1/5, 1, 1/8,
4, 8,1),
nrow = 3, ncol = 3, byrow = T)
names_criterios <- c("I", "II", "III")
colnames(mD) <- rownames(mD) <-  names_criterios
mD %>%
round(2) %>%
kbl() %>%
# kable_material_dark()
kable_styling(bootstrap_options = "striped",
full_width = F, position = "center",
font_size = 15)
mD <- eigenvectors(mD, normalize = T)
mD
c(mA, mB, Mc, mD)
wC <- eigenvectors(mC, normalize = T)
wC
c(wA, wB, wC, wD)
wC <- eigenvectors(mC, normalize = T)
mC <- matrix(c(1, 1/5, 3,
5, 1, 7,
1/3, 1/7,1),
nrow = 3, ncol = 3, byrow = T)
names_criterios <- c("I", "II", "III")
colnames(mC) <- rownames(mC) <-  names_criterios
wC <- eigenvectors(mC, normalize = T)
wC
c(wA, wB, wC, wD)
wD <- eigenvectors(mD, normalize = T)
wD
mD <- matrix(c(1, 5, 1/4,
1/5, 1, 1/8,
4, 8,1),
nrow = 3, ncol = 3, byrow = T)
names_criterios <- c("I", "II", "III")
colnames(mD) <- rownames(mD) <-  names_criterios
c(wA, wB, wC, wD)
wD <- eigenvectors(mD, normalize = T)
wD
c(wA, wB, wC, wD)
w_aternativas <- matrix(c(wA, wB, wC, wD),
nrow = 4, ncol = 3, byrow = T)
w_aternativas
w_aternativas %*% w
w_aternativas <- matrix(c(wA, wB, wC, wD),
nrow = 3, ncol = 4, byrow = T)
w_aternativas
w_aternativas %*% w
w_aternativas <- matrix(c(wA, wB, wC, wD),
nrow = 3, ncol = 4, byrow = F)
w_aternativas
w_aternativas %*% w
w_aternativas
w
w_aternativas
names_criterios <- c("A", "B", "C", "D")
names_alternativas <- c("I", "II", "III")
colnames(w_aternativas) <- names_criterios
rownames(w_aternativas)<-  names_alternativas
w_aternativas %>%
# round(2) %>%
kbl() %>%
# kable_material_dark()
kable_styling(bootstrap_options = "striped",
full_width = F, position = "center",
font_size = 15)
w_aternativas
wD
resultados <- w_aternativas %*% w
resultados
colnames(resultados) <- "Decisión"
resultados %>%
# round(2) %>%
kbl() %>%
# kable_material_dark()
kable_styling(bootstrap_options = "striped",
full_width = F, position = "center",
font_size = 15)
pmax(resultados[,2])
pmax(resultados[[,2]])
resultados
pmax(resultados[[,1]])
pmax(resultados[1])
pmax(resultados[,1])
max(resultados[,1])
